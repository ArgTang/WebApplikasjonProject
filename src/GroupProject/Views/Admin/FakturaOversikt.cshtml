@model GroupProject.ViewModels.Admin.FakturaViewModel

<section class="container" id="__AjaxAntiForgeryForm">
    <div id="errorMessage"></div>
    <table class="table table-hover">
        <thead>
        <tr>
            <h2>Oversikt over alle betalinger som ligger til forfall</h2>
        </tr>
        </thead>
        <tbody>
        <tr>
            <th>Fra Konto:</th>
            <th>Mottaker:</th>
            <th>konto:</th>
            <th>Forfallsdato:</th>
            <th>Sum:</th>
            <th>Valg:</th>

        </tr>

        @foreach (Betalinger betal in Model.payments)
        {
            <tr id="invoiceId_@betal.Id">
                @foreach (Konto konto in Model.accounts)
                {
                    if (betal.konto.kontoNr.Equals(konto.kontoNr))
                    {
                        <td>
                            @konto.kontoType
                            <small>(@betal.konto.kontoNr.Insert(4, " ").Insert(7, " ")) </small>
                        </td>
                    }
                }
                <td>@betal.mottaker</td>
                <td>@betal.tilKonto.Insert(4, " ").Insert(7, " ")</td>
                <td>@betal.forfallDato.ToString("dd.MM.yyyy")</td>
                <td>@betal.belop<span class="currency" style="margin-left: 5px">Kr</span></td>
                <td>
                    @if (betal.utfort == false)
                    {
                        <label><input type="checkbox" name="isPayed" value="@betal.Id">Betal</label>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
    <tr>
        <a onclick="deleteInvoice()" class="btn">Betal alle</a>
        @Html.AntiForgeryToken()
    </tr>
</section>

<script>
    function deleteInvoice() {
        var checkedCheckboxes = getCheckedBoxes();
        var request = $.ajax({
            type: "POST",
            url: "betal",
            data: {
                __RequestVerificationToken: $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val(),
                checkBox: checkedCheckboxes
            }
        });

        request.done(function (response) {
            switch (response) {
                case "Error":
                    showError();
                case "Success":
                    showMessage();
            }
        });

        request.fail(function (jqXHR, textStatus) {
            showError();
        });
    }

    function getCheckedBoxes() {
        var checkboxes = document.getElementsByName("isPayed");
        var checkboxesChecked = [];

        for (var i = 0; i < checkboxes.length; i++) {

            if (checkboxes[i].checked) {
                checkboxesChecked.push(checkboxes[i].value);
            }
        }
        return checkboxesChecked;
    }

    function showError() {
        var p = document.createElement("p");
        var text = document.createTextNode("Det oppstod en feil ved betaling");
        var div = document.getElementById("errorMessage");
        p.classList.add("bg-danger");
        p.appendChild(text);

        div.appendChild(p);
    }

    function showMessage() {
        var p = document.createElement("p");
        var text = document.createTextNode("Betalingen var vellykket");
        var div = document.getElementById("errorMessage");
        p.classList.add("bg-success");
        p.appendChild(text);

        div.appendChild(p);
    }
</script>

